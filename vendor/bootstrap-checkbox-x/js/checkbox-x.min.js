/*!
 * @copyright &copy; Kartik Visweswaran, Krajee.com, 2014
 * @version 1.5.0
 *
 * An extended checkbox plugin for bootstrap with three states and additional styles.
 *
 * For more JQuery/Bootstrap plugins and demos visit http://plugins.krajee.com
 * For more Yii related demos visit http://demos.krajee.com
 */!function(e){var n=function(n,t){var i=this;i.$element=e(n),i.disabled=i.$element.attr("disabled")||i.$element.attr("readonly"),i.initialValue=i.$element.val(),i.init(t)};n.prototype={constructor:n,init:function(n){var t=this,i=t.$element,a=i.is(":checkbox"),c=i.val(),o=n.inline?"cbx-container":"cbx-container cbx-block";return t.options=n,t.skipChange=!1,a&&0!==c&&1!==c&&(i.attr("checked",!1),n.threeState&&i.prop("indeterminate",!0)),a&&n.useNative?(i.on("change",function(){t.change(!1)}),i.removeClass("cbx-loading"),void t.setCheckboxProp(i.val())):("undefined"==typeof t.$container?(t.$container=e(document.createElement("div")).addClass(o).html(t.render()),i.before(t.$container),t.$container.append(i),i.hide()):(t.$container.before(i),t.$container.addClass(o).html(t.render()),t.$container.append(i)),i.removeClass("cbx-loading"),t.$cbx=t.$container.find(".cbx"),i.closest("form").on("reset",function(){t.reset()}),t.$cbx.on("click",function(){(a||!n.threeState)&&(n.enclosedLabel||n.useNative||(n.threeState?t.change(!1):(t.skipChange=!0,t.change(!0))))}),t.$cbx.on("keyup",function(e){32==e.which&&t.change(!0)}),void(a&&!n.useNative?i.on("change",function(){t.change(!1,t.skipChange)}):i.on("click",function(){t.change(!1)})))},change:function(e){var n,t=this,i=t.$element,a=arguments.length>1&&arguments[1],c=t.options.useNative;t.disabled||(n=t.calculate(),a||i.val(n),!e||c||a?t.validateCheckbox(c,n):i.trigger("change"),c||t.$cbx.html(t.getIndicator()),a&&(t.skipChange=!1))},calculate:function(){var e=this,n=e.$element,t=parseInt(n.val()),i=e.options.threeState;return i?1===t?null:0===t?1:0:1===t?0:1},validateCheckbox:function(e,n){var t=this,i=t.$element,a=i.is(":checkbox");return a?void t.setCheckboxProp(n):void(e||i.trigger("change"))},setCheckboxProp:function(e){var n=this,t=n.$element,i=t.is(":checkbox");i&&(t.prop("indeterminate",!1),t.prop("checked",!1),1==e?t.prop("checked",!0):0!==e&&t.prop("indeterminate",!0))},reset:function(){var e=this,n=e.$element;n.val(e.initialValue),e.refresh(),n.trigger("checkbox.reset")},refresh:function(n){var t=this;arguments.length?t.init(e.extend(t.options,n)):(t.disabled=t.$element.attr("disabled")||t.$element.attr("readonly"),t.init(t.options)),t.initialValue=t.$element.val()},getIndicator:function(){var e=this,n=e.options,t=n.iconUnchecked,i=parseInt(e.$element.val());return 1===i?t=n.iconChecked:0!==i&&1==e.options.threeState&&(t=n.iconNull),t},render:function(){var e=this,n=e.getIndicator(),t=e.options.size,i=e.disabled?"":' tabindex="1000"',a="cbx cbx-"+t+(e.disabled?" cbx-disabled":" cbx-active");return'<div class="'+a+'"'+i+">"+n+"</div>"}},e.fn.checkboxX=function(t){var i=Array.apply(null,arguments);return i.shift(),this.each(function(){var a=e(this),c=a.data("checkboxX"),o="object"==typeof t&&t;c||a.data("checkboxX",c=new n(this,e.extend({},e.fn.checkboxX.defaults,o,e(this).data()))),"string"==typeof t&&c[t].apply(c,i)})},e.fn.checkboxX.defaults={threeState:!0,inline:!0,iconChecked:'<i class="glyphicon glyphicon-ok"></i>',iconUnchecked:" ",iconNull:'<i class="glyphicon glyphicon-stop"></i>',size:"md",enclosedLabel:!1,useNative:!1},e('input[data-toggle="checkbox-x"]').addClass("cbx-loading"),e(document).ready(function(){e('input[data-toggle="checkbox-x"]').checkboxX()})}(window.jQuery);